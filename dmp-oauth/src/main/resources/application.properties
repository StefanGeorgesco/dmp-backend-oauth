# ===============================
# DATABASE
# ===============================
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/dmp-oauth?serverTimezone=Europe/Paris
spring.datasource.username=root
spring.datasource.password=root
spring.sql.init.mode=always

# ===============================
# JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update)
# https://stackoverflow.com/questions/438146/what-are-the-possible-values-of-the-hibernate-hbm2ddl-auto-configuration-and-wha
# data definition language(DDL) est un langage de programmation et un sous-ensemble de SQL pour manipuler les structures
# de donn�es d'une base de donn�es, et non les donn�es elles-m�mes. 
spring.jpa.hibernate.ddl-auto=validate
# in case you should use MYSQL 5.X, then choose org.hibernate.dialect.MySQL5Dialect below 
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
# default strategy :Replace dots with underscores, Change camel case to snake case, and Lower-case table names
# names muste be defined in @column annotation if different from database
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
# spring.jpa.properties.hibernate.fetch=FetchType.LAZY
spring.jpa.open-in-view=false

# ===============================
# DATA PROPERTIES
# ===============================
# FLYWAY (FlywayProperties)
spring.flyway.table=flyway_schema_history
spring.flyway.baseline-on-migrate=true
spring.flyway.enabled=true

# ===============================
# JSON
# ===============================
spring.jackson.default-property-inclusion=NON_NULL

# ===============================
# CONTEXT-PATH
# ===============================
server.servlet.context-path=/api

# ===============================
# SERVER
# ===============================
server.forward-headers-strategy=native
spring.web.resources.chain.cache=false

# ===============================
# FRONT-END
# ===============================
frontend.url=http://localhost:5173

# ===============================
# RNIPP SERVICE
# ===============================
rnipp.url=http://localhost:8081/rnipp

# ===============================
# OAUTH2-RESOURCE-SERVER-CONFIG
# ===============================
spring.security.oauth2.resourceserver.jwt.jwk-set-uri = http://localhost:8180/realms/dmp/protocol/openid-connect/certs

keycloak.auth-server-url=http://localhost:8180
keycloak.realm=dmp
keycloak.resource=dmpclient
keycloak.principal-attribute=preferred_username

IAM.admin.client.username=admin
IAM.admin.client.password=admin
IAM.admin.client.grant_type=password
IAM.admin.client.client_id=admin-cli

